CREATE TABLE CUSTOMER
(CID VARCHAR(20) NOT NULL,
 FNAME CHAR(20),
 LNAME CHAR(20),
 EMAIL VARCHAR(50),
 ADDRESS VARCHAR(50),
 PHONE VARCHAR(15),
 STATUS CHAR(8), 
 CHECK (STATUS IN ('PLATINUM','SILVER')),
 CONSTRAINT PK_CUSTOMER1
 PRIMARY KEY (CID));

CREATE TABLE CREDIT_CARD
(CCNUMBER VARCHAR(16) NOT NULL,
 SECNUMBER INTEGER(3),
 OWNERNAME VARCHAR(20),
 CCTYPE CHAR(15),
 CCADDRESS VARCHAR(200),
 EXPDATE DATE,
 CONSTRAINT PK_CREDIT_CARD
 PRIMARY KEY (CCNUMBER));

CREATE TABLE PRODUCT
(PID VARCHAR(20) NOT NULL,
 PTYPE VARCHAR(20),
 PNAME VARCHAR(40),
 PPRICE DECIMAL(10,2),
 DESCRIPTION VARCHAR(1000),
 CONSTRAINT PK_PRODUCT
 PRIMARY KEY (PID));

CREATE TABLE DESKTOP
(PID VARCHAR(20),
 CPUTYPE VARCHAR(50),
 CONSTRAINT FK_DESKTOP1
 FOREIGN KEY (PID) REFERENCES PRODUCT(PID)
 ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE LAPTOP
(PID VARCHAR(20),
 CPUTYPE VARCHAR(50),
 BTYPE VARCHAR(30),
 WEIGHT DECIMAL (10,2),
 CONSTRAINT FK_LAPTOP1
 FOREIGN KEY (PID) REFERENCES PRODUCT(PID)
 ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE PRINTER
(PID VARCHAR(20),
 PRINTERTYPE VARCHAR(50),
 RESOLUTION VARCHAR(30),
 CONSTRAINT FK_PRINTER1 
 FOREIGN KEY (PID) REFERENCES PRODUCT(PID)
 ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE OFFER_PRODUCT
(PID VARCHAR(20),
 OFFERPRICE DECIMAL(10,2),
 CONSTRAINT FK_OFFER_PRODUCT1
 FOREIGN KEY (PID) REFERENCES PRODUCT(PID)
 ON DELETE CASCADE ON UPDATE CASCADE);


CREATE TABLE SILVER_AND_ABOVE
(CID VARCHAR(10),
 CREDITLINE BOOLEAN,
 CONSTRAINT FK_SILVER_AND_ABOVE1
 FOREIGN KEY (CID) REFERENCES CUSTOMER(CID)
 ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE STORED_CARD
(CCNUMBER VARCHAR(16),
 CID VARCHAR(10),
 CONSTRAINT FK_STORED_CARD1
 FOREIGN KEY (CCNUMBER) REFERENCES CREDIT_CARD(CCNUMBER)
 ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE SHIPPING_ADDRESS
(CID VARCHAR(10) NOT NULL,
 SANAME VARCHAR(20) NOT NULL,
 RECEPIENTNAME CHAR(40),
 STREET VARCHAR(50),
 SNUMBER VARCHAR(10),
 CITY CHAR(15),
 ZIP INTEGER(6),
 STATE CHAR(20),
 COUNTRY CHAR(30),
 CONSTRAINT FK_SHIPPING_ADDRESS1
 FOREIGN KEY (CID) REFERENCES CUSTOMER(CID)
 ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE TRANSACTION
(CARTID VARCHAR(20) NOT NULL,
 CID VARCHAR(10) NOT NULL,
 SANAME VARCHAR(25),
 CCNUMBER VARCHAR(16), 
 TSTATUS VARCHAR(20),
 TDATE DATE,
 CONSTRAINT PK_TRANSACTION1
 PRIMARY KEY (CARTID),
 CONSTRAINT FK_TRANSACTION1
 FOREIGN KEY (CID) REFERENCES CUSTOMER(CID)
 ON DELETE CASCADE ON UPDATE CASCADE);

 CREATE TABLE APPEARS_IN
 (CARTID VARCHAR(20),
  PID VARCHAR(20),
  QUANTITY INT(10),
  PRICESOLD DECIMAL(10,2),
  CONSTRAINT FK_APPEARS1
  FOREIGN KEY (CARTID) REFERENCES TRANSACTION(CARTID)
  ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_APPEARS2
  FOREIGN KEY (PID) REFERENCES PRODUCT(PID)
  ON DELETE CASCADE ON UPDATE CASCADE); 
  
    DELIMITER $$
  CREATE TRIGGER CHECK_STATUS BEFORE INSERT ON CUSTOMER
  FOR EACH ROW 
  BEGIN
       IF (NEW.STATUS NOT IN  ('PLATINUM','SILVER','NULL')) THEN
 	  SIGNAL SQLSTATE 'ERROR';
       END IF;
  END$$
  DELIMITER ;

  DELIMITER $$
  CREATE TRIGGER CHECK_PRODUCT_TYPE BEFORE INSERT ON PRODUCT
  FOR EACH ROW 
  BEGIN
       IF (NEW.PTYPE NOT IN  ('PRINTER','DESKTOP','LAPTOP')) THEN
 	  SIGNAL SQLSTATE 'ERROR';
       END IF;
  END$$
  DELIMITER ;

  
  DELIMITER $$
  CREATE TRIGGER CHECK_QUANTITY BEFORE INSERT ON APPEARS_IN
  FOR EACH ROW 
  BEGIN
       IF (NEW.QUANTITY < 0) THEN
 	  SIGNAL SQLSTATE 'ERROR';
       END IF;
  END$$
  DELIMITER ;
  
  DELIMITER $$
  CREATE TRIGGER CHECK_OFFER_PRICE BEFORE INSERT ON OFFER_PRODUCT
  FOR EACH ROW 
  BEGIN
       IF (NEW.OFFERPRICE > (SELECT PPRICE FROM PRODUCT WHERE PRODUCT.PID = NEW.PID)) THEN
 	  SIGNAL SQLSTATE 'ERROR';
       END IF;
  END$$
  DELIMITER ;
  
